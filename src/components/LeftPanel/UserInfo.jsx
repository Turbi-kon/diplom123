import React, { useState, useEffect } from "react";
import "./UserInfo.css";
import Notifications from "./Notifications"; // üëà –ø–æ–¥–∫–ª—é—á–∞–µ–º

const UserInfo = () => {
  const [isTooltipVisible, setTooltipVisible] = useState(false);
  const [user, setUser] = useState(null);  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  // –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å –±—ç–∫–µ–Ω–¥–∞
  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const token = localStorage.getItem('access'); // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω —Å –∫–ª—é—á–æ–º "access"
        console.log('–¢–æ–∫–µ–Ω:', token); // –í—ã–≤–æ–¥–∏–º —Ç–æ–∫–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        const response = await fetch("http://localhost:8000/accounts/api/user/", {
          headers: {
            "Authorization": `Bearer ${token}`,  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
          },
        });

        console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response); // –õ–æ–≥–∏—Ä—É–µ–º —Å–∞–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞

        if (!response.ok) {
          throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö");
        }

        const data = await response.json();
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data); // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        setUser(data);

        if (data?.role) {
          localStorage.setItem("role", data.role);
        }

      } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
      }
    };

    fetchUserData();
  }, []);

  const handleMouseEnter = () => {
    setTooltipVisible(true);
  };

  const handleMouseLeave = () => {
    setTooltipVisible(false);
  };

  if (!user) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;  // –ü–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  }

  // –†–∞–∑–¥–µ–ª—è–µ–º –∏–º—è –∏ –∏–Ω–∏—Ü–∏–∞–ª—ã
  const nameParts = user.name.split(" ");
  const lastName = nameParts[0];
  const initials = nameParts.slice(1).map(name => name[0]).join(".") + "."; // –ò–Ω–∏—Ü–∏–∞–ª–∫–∏

  const userInfo = (
    <div className="user-info">
      <div className="user-avatar">{lastName[0]}</div> {/* –ò–Ω–∏—Ü–∏–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div
        className="user-details"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
      >
        <div className="user-name">{lastName} {initials}</div> {/* –§–∞–º–∏–ª–∏—è –ò.–û. */}

        {isTooltipVisible && (
  <div className="user-tooltip">
    <div className="user-tooltip-text">
      <p><strong>–§–ò–û:</strong> {user.name}</p>

      {user.role === "—Å—Ç—É–¥–µ–Ω—Ç" && (
        <>
          <p><strong>–ù–æ–º–µ—Ä –∑–∞—á—ë—Ç–Ω–æ–π –∫–Ω–∏–∂–∫–∏:</strong> {user.student_number || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</p>
          <p><strong>–ì—Ä—É–ø–ø–∞:</strong> {user.group || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}</p>
        </>
      )}

      <p><strong>–†–æ–ª—å:</strong> {user.role}</p>
    </div>
  </div>
)}
      </div>
      <Notifications /> {/* üëà –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫ */}
    </div>
  );

  return userInfo;
};

export default UserInfo;
